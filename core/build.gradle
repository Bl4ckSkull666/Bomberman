plugins {
    id 'java'
    id "org.jetbrains.kotlin.jvm" version "1.3.72"
    id "org.jetbrains.kotlin.kapt" version "1.3.72"
    id 'idea'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
    jcenter()
    maven {
        // bukkits repo
        url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        // world edit repo
        url "https://maven.enginehub.org/repo"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.+"

    compileOnly "com.sk89q.worldedit:worldedit-bukkit:7.0.0"
    testImplementation "com.sk89q.worldedit:worldedit-bukkit:7.0.0"

    testImplementation "junit:junit:4.+"
    testImplementation "org.mockito:mockito-core:3.3.+"

    kapt project(":cmdMsgProcessor")
    compile project(":cmdMsg")
}

processResources  {
     // auto assign values in the plugin.yml
    // Do not filter schematics as they get corrupted when trying to be read as text
    filesNotMatching("**.schem") {
        filter {
            line ->
                line
                        .replace('${version}', version)
        }
    }
}

task clearOldPluginJar( type: Delete ) {
    description 'Deletes any old bomberman plugins from the server'
    if ( project.hasProperty("serverLocation" ) ) {
        delete project.fileTree( "$serverLocation/plugins/update" ) {
            include '*omberman*.jar'
        }
    }
}

task copyToServer(type: Copy, dependsOn: clearOldPluginJar ) {
    description 'Copies the plugin to the server'
    if ( project.hasProperty("serverLocation" ) ) {
        from jar
        into "$serverLocation/plugins/update"
    }
}

task install( dependsOn: [build, copyToServer] ) {
    description 'Compiles, tests and copies the code to the server'
}

jar {
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
    }
}